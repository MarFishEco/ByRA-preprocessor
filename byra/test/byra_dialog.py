# -*- coding: utf-8 -*-
"""
/***************************************************************************
 ByRaDialog
                                 A QGIS plugin
 This tool yadda adda yadda
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2018-04-24
        git sha              : $Format:%H$
        copyright            : (C) 2018 by ByRA
        email                : maxczapanskiy@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from PyQt5 import uic
from PyQt5 import QtWidgets
from PyQt5.QtWidgets import QMessageBox

FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'byra_dialog_base.ui'))


class ByRaDialog(QtWidgets.QDialog, FORM_CLASS):
  def __init__(self, parent=None):
    """Constructor."""
    super(ByRaDialog, self).__init__(parent)
    # Set up the user interface from Designer.
    # After setupUI you can access any designer object by doing
    # self.<objectname>, and you can use autoconnect slots - see
    # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
    # #widgets-and-dialogs-with-auto-connect
    self.setupUi(self)
    
  def accept(self):
    # Dialog error checking
    if not os.path.exists(self.hraFolder.text()):
      QMessageBox.warning(self, 'Input error', 'HRA folder does not exist')
    elif not os.path.exists(self.gearCovFolder.text()):
      QMessageBox.warning(self, 'Input error', 'Gear coverage folder does not exist')
    elif not os.path.isfile(self.mgmtShp.text()):
      QMessageBox.warning(self, 'Input error', 'Management shapefile does not exist')
    elif not os.path.exists(self.habSuitFolder.text()):
      QMessageBox.warning(self, 'Input error', 'Habitat suitability folder does not exist')
    elif not os.path.exists(self.outputFolder.text()):
      QMessageBox.warning(self, 'Input error', 'Output folder does not exist')
    else:
      self.done(1) # Only accept the dialog if all inputs are valid
